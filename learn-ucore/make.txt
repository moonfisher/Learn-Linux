+ cc kern/init/entry.S
+ cc kern/init/init.c
+ cc kern/libs/readline.c
+ cc kern/libs/stdio.c
+ cc kern/libs/string.c
+ cc kern/debug/kdebug.c
+ cc kern/debug/kmonitor.c
+ cc kern/debug/panic.c
+ cc kern/driver/clock.c
+ cc kern/driver/console.c
+ cc kern/driver/ide.c
+ cc kern/driver/intr.c
+ cc kern/driver/picirq.c
+ cc kern/trap/trap.c
+ cc kern/trap/trapentry.S
+ cc kern/trap/vectors.S
+ cc kern/mm/default_pmm.c
+ cc kern/mm/kmalloc.c
+ cc kern/mm/pmm.c
+ cc kern/mm/swap.c
+ cc kern/mm/swap_fifo.c
+ cc kern/mm/vmm.c
+ cc kern/sync/check_sync.c
+ cc kern/sync/monitor.c
+ cc kern/sync/sem.c
+ cc kern/sync/wait.c
+ cc kern/fs/file.c
+ cc kern/fs/fs.c
+ cc kern/fs/iobuf.c
+ cc kern/fs/sysfile.c
+ cc kern/process/entry.S
+ cc kern/process/proc.c
+ cc kern/process/switch.S
+ cc kern/schedule/default_sched.c
+ cc kern/schedule/sched.c
+ cc kern/syscall/syscall.c
+ cc kern/fs/swap/swapfs.c
+ cc kern/fs/vfs/inode.c
+ cc kern/fs/vfs/vfs.c
+ cc kern/fs/vfs/vfsdev.c
+ cc kern/fs/vfs/vfsfile.c
+ cc kern/fs/vfs/vfslookup.c
+ cc kern/fs/vfs/vfspath.c
+ cc kern/fs/devs/dev.c
+ cc kern/fs/devs/dev_disk0.c
+ cc kern/fs/devs/dev_stdin.c
+ cc kern/fs/devs/dev_stdout.c
+ cc kern/fs/sfs/bitmap.c
+ cc kern/fs/sfs/sfs.c
+ cc kern/fs/sfs/sfs_fs.c
+ cc kern/fs/sfs/sfs_inode.c
+ cc kern/fs/sfs/sfs_io.c
+ cc kern/fs/sfs/sfs_lock.c
+ cc libs/hash.c
+ cc libs/printfmt.c
+ cc libs/rand.c
+ cc libs/string.c
+ ld bin/kernel
+ cc boot/bootasm.S
+ cc boot/bootmain.c
+ cc tools/sign.c
+ ld bin/bootblock
'obj/bootblock.out' size: 458 bytes
build 512 bytes boot sector: 'bin/bootblock' success!
+ cc tools/mksfs.c
+ cc user/badarg.c
+ cc user/libs/dir.c
+ cc user/libs/file.c
+ cc user/libs/initcode.S
+ cc user/libs/panic.c
+ cc user/libs/stdio.c
+ cc user/libs/syscall.c
+ cc user/libs/ulib.c
+ cc user/libs/umain.c
+ cc user/badsegment.c
+ cc user/divzero.c
+ cc user/exit.c
+ cc user/faultread.c
+ cc user/faultreadkernel.c
+ cc user/forktest.c
+ cc user/forktree.c
+ cc user/hello.c
+ cc user/ls.c
+ cc user/matrix.c
+ cc user/pgdir.c
+ cc user/priority.c
+ cc user/sfs_filetest1.c
+ cc user/sh.c
+ cc user/sleep.c
+ cc user/sleepkill.c
+ cc user/softint.c
+ cc user/spin.c
+ cc user/testbss.c
+ cc user/waitkill.c
+ cc user/yield.c
create bin/sfs.img (disk0) successfully.
